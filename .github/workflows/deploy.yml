name: Springboot App CI/CD

on:
  push:
    branches:
      - main

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  POSTGRES_DB: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup jdk 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar

      - name: Execute Gradle build
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar

      - uses: actions/upload-artifact@master
        with:
          name: jar-file
          path: build/libs/authentication-0.0.1-SNAPSHOT.jar

  publish:
    runs-on: ubuntu-latest
    needs: build  # Wait for build job to complete

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: build/libs/authentication-0.0.1-SNAPSHOT.jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Store in a dedicated secret

      - name: Set env
        run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

      - name: Build And Push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./Dockerfile
          build-args: |
            PRODUCTION=${{ secrets.PRODUCTION }}
            JDBC_DATABASE_PASSWORD=${{ secrets.JDBC_DATABASE_PASSWORD }}
            JDBC_DATABASE_URL=${{ secrets.JDBC_DATABASE_URL }}
            JDBC_DATABASE_USERNAME=${{ secrets.JDBC_DATABASE_USERNAME }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          tags: voizcrack/${{ secrets.IMAGE_NAME }}:${{ env.DATE }}


  deploy:
    runs-on: ubuntu-latest
    needs: publish  # Wait for publish job to complete
    steps:
      - uses: actions/checkout@v4
        
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_STATIC_IP }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker container rm -f ${{ secrets.CONTAINER_NAME }} || true
            docker image rm -f ${{ secrets.DOCKERHUB_USER }}/${{ secrets.IMAGE_NAME }}:${{ env.DATE }} || true
            docker run --name ${{ secrets.CONTAINER_NAME }} -d -p 80:8080 ${{ secrets.DOCKERHUB_USER }}/${{ secrets.IMAGE_NAME }}:${{ env.DATE }}